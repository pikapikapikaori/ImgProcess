{"remainingRequest":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/src/components/pages/BasicFunc.vue?vue&type=template&id=d8e7ebf2&scoped=true&","dependencies":[{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/src/components/pages/BasicFunc.vue","mtime":1653751833497},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/cache-loader/dist/cjs.js","mtime":1653547444000},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1653547444710},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/cache-loader/dist/cjs.js","mtime":1653547444000},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/index.js","mtime":1653547444500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImJhc2ljIiBzdHlsZT0iYmFja2dyb3VuZDogI2ZmZjsgbWluLWhlaWdodDogMTAwJSI+CiAgPGVsLWNvbnRhaW5lciBzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyBoZWlnaHQ6IDk1JTsgd2lkdGg6IDEwMCU7IGJvcmRlcjogMCI+CiAgICA8ZWwtYXNpZGUgd2lkdGg9IjIzNnB4IiBzdHlsZT0ibWFyZ2luLXRvcDogNSU7IG1hcmdpbi1sZWZ0OiAyMHB4Ij4KICAgICAgPGRpdiBjbGFzcz0iYXNpZGUiPgogICAgICAgIDxkaXYgY2xhc3M9ImhlYWQiPgogICAgICAgICAgPEhlYWQvPgogICAgICAgIDwvZGl2PgogICAgICAgIDxOYXZpZ2F0aW9uLz4KICAgICAgPC9kaXY+CiAgICA8L2VsLWFzaWRlPgoKICAgIDxlbC1jb250YWluZXIgc3R5bGU9Im1hcmdpbi10b3A6IDUlOyBtYXJnaW4tcmlnaHQ6IDIzNnB4Ij4KICAgICAgPGVsLWhlYWRlciBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBmb250LXNpemU6IDM2cHgiPgogICAgICAgIDxkaXYgY2xhc3M9ImhlYWRpbmciPgogICAgICAgICAge3sgaGVhZG1zZyB9fQogICAgICAgIDwvZGl2PgogICAgICA8L2VsLWhlYWRlcj4KCiAgICAgIDxlbC1tYWluIHN0eWxlPSJ0ZXh0LWFsaWduOiBsZWZ0OyBmb250LXNpemU6IDE4cHgiPgogICAgICAgIDxlbC1kaXZpZGVyIGNvbnRlbnQtcG9zaXRpb249ImxlZnQiPuWfuuehgOWKn+iDvTwvZWwtZGl2aWRlcj4KICAgICAgICB7eyBpbnRyb21zZyB9fQogICAgICAgIDxlbC10YWJzIHR5cGU9ImJvcmRlci1jYXJkIiBzdHlsZT0ibWFyZ2luLXRvcDogMzBweDsgbWluLWhlaWdodDogODAlIj4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i54Gw5bqm5YyWIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9ImdyYXlpbmdfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImdyYXlpbmdfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0iZ3JheWluZ1NlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJncmF5aW5nX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0iZ3JheWluZ0Zvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImdyYXlpbmdGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJncmF5aW5nX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImdyYXlpbmdfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImdyYXlpbmdfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJncmF5aW5nTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImdyYXlpbmdfbmV4dCI+5LiL5LiA5q2lCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0iZ3JheWluZ19hY3RpdmUgPj0gMyIgOmxvYWRpbmc9ImdyYXlpbmdMb2FkIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIj7lrozmiJAKICAgICAgICAgICAgPC9lbC1idXR0b24+CgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5LqM5YC85YyWIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9InRocmVfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9InRocmVfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0idGhyZVNlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJ0aHJlX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0idGhyZUZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9InRocmVGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJ0aHJlX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9InRocmVfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9InRocmVfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJ0aHJlTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InRocmVfbmV4dCI+5LiL5LiA5q2lCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0idGhyZV9hY3RpdmUgPj0gMyIgOmxvYWRpbmc9InRocmVMb2FkIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIj7lrozmiJAKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLpgLvovpHkuI4iPgogICAgICAgICAgICA8ZWwtc3RlcHMgOmFjdGl2ZT0ibG9naWNhbF9hbmRfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfYW5kX2FjdGl2ZSA9PT0gMCIgc3R5bGU9Im1hcmdpbi10b3A6IDIwcHg7Ij4KICAgICAgICAgICAgICA8UGljdHVyZUNob29zZU9uZSByZWY9ImxvZ2ljYWxfYW5kU2VsZWN0aW9uIi8+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfYW5kX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0ibG9naWNhbF9hbmRGb3JtIiBjbGFzcz0iZGVtby1mb3JtLWlubGluZSI+CiAgICAgICAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9Iui+k+WHuuWbvuWDj+WQjeensCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC13aWR0aD0iMzAlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflkI3np7DkuI3og73kuLrnqbonfQogICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgbWFyZ2luLWxlZnQ6IDEwJTsgbWFyZ2luLXJpZ2h0OiAxMCU7IHdpZHRoOiA2MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJsb2dpY2FsX2FuZEZvcm0ucmVzX25hbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImFwcGVuZCI+LmpwZzwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2VsLWZvcm0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfYW5kX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvYXNzZXRzLycgKyB0aGlzLmRpc3BsYXlJbWdbMV0uZmlsZU5hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyB3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfYW5kX2FjdGl2ZSA9PT0gMyIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+57uT5p6c5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL3Jlc3VsdHMvJyArIHRoaXMucHJvY2Vzc1Jlc3VsdC5yZXN1bHRfbmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxlbC1idXR0b24gc3R5bGU9Im1hcmdpbi1sZWZ0OiA4MCU7IG1hcmdpbi10b3A6IDEwcHg7IiBAY2xpY2s9ImNhbmNlbCI+5Y+W5raIPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJsb2dpY2FsX2FuZF9hY3RpdmUgPD0gMiIgOmxvYWRpbmc9ImxvZ2ljYWxfYW5kTG9hZCIKICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0ibG9naWNhbF9hbmRfbmV4dCI+5LiL5LiA5q2lCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0ibG9naWNhbF9hbmRfYWN0aXZlID49IDMiIDpsb2FkaW5nPSJsb2dpY2FsX2FuZExvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCI+5a6M5oiQCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i6YC76L6R5oiWIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9ImxvZ2ljYWxfb3JfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfb3JfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0ibG9naWNhbF9vclNlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX29yX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0ibG9naWNhbF9vckZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImxvZ2ljYWxfb3JGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX29yX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvYXNzZXRzLycgKyB0aGlzLmRpc3BsYXlJbWdbMV0uZmlsZU5hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyB3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImxvZ2ljYWxfb3JfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImxvZ2ljYWxfb3JfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJsb2dpY2FsX29yTG9hZCIKICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0ibG9naWNhbF9vcl9uZXh0Ij7kuIvkuIDmraUKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJsb2dpY2FsX29yX2FjdGl2ZSA+PSAzIiA6bG9hZGluZz0ibG9naWNhbF9vckxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCI+5a6M5oiQCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i6YC76L6R6Z2eIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9ImxvZ2ljYWxfbm90X2FjdGl2ZSIgZmluaXNoLXN0YXR1cz0ic3VjY2VzcyIgc2ltcGxlIHN0eWxlPSJtYXJnaW4tdG9wOiAxMHB4Ij4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6YCJ5oup5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9Iui+k+WFpeWPguaVsCI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLlpITnkIblm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgPC9lbC1zdGVwcz4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX25vdF9hY3RpdmUgPT09IDAiIHN0eWxlPSJtYXJnaW4tdG9wOiAyMHB4OyI+CiAgICAgICAgICAgICAgPFBpY3R1cmVDaG9vc2VPbmUgcmVmPSJsb2dpY2FsX25vdFNlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX25vdF9hY3RpdmUgPT09IDEiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tbGVmdDogMjAlOyBtYXJnaW4tcmlnaHQ6IDIwJSI+CiAgICAgICAgICAgICAgICA8ZWwtZm9ybSA6bW9kZWw9ImxvZ2ljYWxfbm90Rm9ybSIgY2xhc3M9ImRlbW8tZm9ybS1pbmxpbmUiPgogICAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLovpPlh7rlm77lg4/lkI3np7AiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtd2lkdGg9IjMwJSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IlsKICAgICAgICAgICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5ZCN56ew5LiN6IO95Li656m6J30KICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDogNjAlIj4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0ibG9naWNhbF9ub3RGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX25vdF9hY3RpdmUgPT09IDIiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPuWOn+WbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9hc3NldHMvJyArIHRoaXMuZGlzcGxheUltZ1swXS5maWxlTmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJsb2dpY2FsX25vdF9hY3RpdmUgPT09IDMiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPue7k+aenOWbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9yZXN1bHRzLycgKyB0aGlzLnByb2Nlc3NSZXN1bHQucmVzdWx0X25hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZWwtYnV0dG9uIHN0eWxlPSJtYXJnaW4tbGVmdDogODAlOyBtYXJnaW4tdG9wOiAxMHB4OyIgQGNsaWNrPSJjYW5jZWwiPuWPlua2iDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0ibG9naWNhbF9ub3RfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJsb2dpY2FsX25vdExvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImxvZ2ljYWxfbm90X25leHQiPuS4i+S4gOatpQogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImxvZ2ljYWxfbm90X2FjdGl2ZSA+PSAzIiA6bG9hZGluZz0ibG9naWNhbF9ub3RMb2FkIgogICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJjYW5jZWwiPuWujOaIkAogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KCiAgICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLlm77lg4/nm7jliqAiPgogICAgICAgICAgICA8ZWwtc3RlcHMgOmFjdGl2ZT0iYWRkX2FjdGl2ZSIgZmluaXNoLXN0YXR1cz0ic3VjY2VzcyIgc2ltcGxlIHN0eWxlPSJtYXJnaW4tdG9wOiAxMHB4Ij4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6YCJ5oup5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9Iui+k+WFpeWPguaVsCI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLlpITnkIblm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgPC9lbC1zdGVwcz4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJhZGRfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0iYWRkU2VsZWN0aW9uIi8+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImFkZF9hY3RpdmUgPT09IDEiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tbGVmdDogMjAlOyBtYXJnaW4tcmlnaHQ6IDIwJSI+CiAgICAgICAgICAgICAgICA8ZWwtZm9ybSA6bW9kZWw9ImFkZEZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImFkZEZvcm0ucmVzX25hbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImFwcGVuZCI+LmpwZzwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2VsLWZvcm0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImFkZF9hY3RpdmUgPT09IDIiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPuWOn+WbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9hc3NldHMvJyArIHRoaXMuZGlzcGxheUltZ1swXS5maWxlTmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzFdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgd2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJhZGRfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImFkZF9hY3RpdmUgPD0gMiIgOmxvYWRpbmc9ImFkZExvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZF9uZXh0Ij7kuIvkuIDmraUKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJhZGRfYWN0aXZlID49IDMiIDpsb2FkaW5nPSJhZGRMb2FkIgogICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJjYW5jZWwiPuWujOaIkAogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuWbvuWDj+ebuOWHjyI+CiAgICAgICAgICAgIDxlbC1zdGVwcyA6YWN0aXZlPSJzdWJ0cmFjdF9hY3RpdmUiIGZpbmlzaC1zdGF0dXM9InN1Y2Nlc3MiIHNpbXBsZSBzdHlsZT0ibWFyZ2luLXRvcDogMTBweCI+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IumAieaLqeWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLovpPlhaXlj4LmlbAiPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i5aSE55CG5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgIDwvZWwtc3RlcHM+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ic3VidHJhY3RfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0ic3VidHJhY3RTZWxlY3Rpb24iLz4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ic3VidHJhY3RfYWN0aXZlID09PSAxIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDIwJTsgbWFyZ2luLXJpZ2h0OiAyMCUiPgogICAgICAgICAgICAgICAgPGVsLWZvcm0gOm1vZGVsPSJzdWJ0cmFjdEZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9InN1YnRyYWN0Rm9ybS5yZXNfbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYXBwZW5kIj4uanBnPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgICAgICAgICAgIDwvZWwtZm9ybT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ic3VidHJhY3RfYWN0aXZlID09PSAyIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7ljp/lm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvYXNzZXRzLycgKyB0aGlzLmRpc3BsYXlJbWdbMF0uZmlsZU5hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9hc3NldHMvJyArIHRoaXMuZGlzcGxheUltZ1sxXS5maWxlTmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IHdpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ic3VidHJhY3RfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9InN1YnRyYWN0X2FjdGl2ZSA8PSAyIiA6bG9hZGluZz0ic3VidHJhY3RMb2FkIgogICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJzdWJ0cmFjdF9uZXh0Ij7kuIvkuIDmraUKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJzdWJ0cmFjdF9hY3RpdmUgPj0gMyIgOmxvYWRpbmc9InN1YnRyYWN0TG9hZCIKICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIj7lrozmiJAKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLlm77lg4/nm7jkuZgiPgogICAgICAgICAgICA8ZWwtc3RlcHMgOmFjdGl2ZT0ibXVsdGlwbHlfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9Im11bHRpcGx5X2FjdGl2ZSA9PT0gMCIgc3R5bGU9Im1hcmdpbi10b3A6IDIwcHg7Ij4KICAgICAgICAgICAgICA8UGljdHVyZUNob29zZU9uZSByZWY9Im11bHRpcGx5U2VsZWN0aW9uIi8+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9Im11bHRpcGx5X2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0ibXVsdGlwbHlGb3JtIiBjbGFzcz0iZGVtby1mb3JtLWlubGluZSI+CiAgICAgICAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9Iui+k+WHuuWbvuWDj+WQjeensCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC13aWR0aD0iMzAlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflkI3np7DkuI3og73kuLrnqbonfQogICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgbWFyZ2luLWxlZnQ6IDEwJTsgbWFyZ2luLXJpZ2h0OiAxMCU7IHdpZHRoOiA2MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJtdWx0aXBseUZvcm0ucmVzX25hbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImFwcGVuZCI+LmpwZzwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CiAgICAgICAgICAgICAgICA8L2VsLWZvcm0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9Im11bHRpcGx5X2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgaGVpZ2h0OmF1dG87IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzFdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgd2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJtdWx0aXBseV9hY3RpdmUgPT09IDMiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPue7k+aenOWbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9yZXN1bHRzLycgKyB0aGlzLnByb2Nlc3NSZXN1bHQucmVzdWx0X25hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZWwtYnV0dG9uIHN0eWxlPSJtYXJnaW4tbGVmdDogODAlOyBtYXJnaW4tdG9wOiAxMHB4OyIgQGNsaWNrPSJjYW5jZWwiPuWPlua2iDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0ibXVsdGlwbHlfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJtdWx0aXBseUxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9Im11bHRpcGx5X25leHQiPuS4i+S4gOatpQogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9Im11bHRpcGx5X2FjdGl2ZSA+PSAzIiA6bG9hZGluZz0ibXVsdGlwbHlMb2FkIgogICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJjYW5jZWwiPuWujOaIkAogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgIDwvZWwtdGFiLXBhbmU+CiAgICAgICAgICA8ZWwtdGFiLXBhbmUgbGFiZWw9IuWbvuWDj+ebuOmZpCI+CiAgICAgICAgICAgIDxlbC1zdGVwcyA6YWN0aXZlPSJkaXZpZGVfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImRpdmlkZV9hY3RpdmUgPT09IDAiIHN0eWxlPSJtYXJnaW4tdG9wOiAyMHB4OyI+CiAgICAgICAgICAgICAgPFBpY3R1cmVDaG9vc2VPbmUgcmVmPSJkaXZpZGVTZWxlY3Rpb24iLz4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0iZGl2aWRlX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0iZGl2aWRlRm9ybSIgY2xhc3M9ImRlbW8tZm9ybS1pbmxpbmUiPgogICAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLovpPlh7rlm77lg4/lkI3np7AiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtd2lkdGg9IjMwJSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IlsKICAgICAgICAgICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5ZCN56ew5LiN6IO95Li656m6J30KICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDogNjAlIj4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0iZGl2aWRlRm9ybS5yZXNfbmFtZSI+CiAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgc2xvdD0iYXBwZW5kIj4uanBnPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgICAgICA8L2VsLWZvcm0taXRlbT4KICAgICAgICAgICAgICAgIDwvZWwtZm9ybT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0iZGl2aWRlX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvYXNzZXRzLycgKyB0aGlzLmRpc3BsYXlJbWdbMV0uZmlsZU5hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyB3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImRpdmlkZV9hY3RpdmUgPT09IDMiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPue7k+aenOWbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9yZXN1bHRzLycgKyB0aGlzLnByb2Nlc3NSZXN1bHQucmVzdWx0X25hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZWwtYnV0dG9uIHN0eWxlPSJtYXJnaW4tbGVmdDogODAlOyBtYXJnaW4tdG9wOiAxMHB4OyIgQGNsaWNrPSJjYW5jZWwiPuWPlua2iDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0iZGl2aWRlX2FjdGl2ZSA8PSAyIiA6bG9hZGluZz0iZGl2aWRlTG9hZCIKICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZGl2aWRlX25leHQiPuS4i+S4gOatpQogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImRpdmlkZV9hY3RpdmUgPj0gMyIgOmxvYWRpbmc9ImRpdmlkZUxvYWQiCiAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCI+5a6M5oiQCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5Zu+5YOP57+76L2sIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9ImZsaXBfYWN0aXZlIiBmaW5pc2gtc3RhdHVzPSJzdWNjZXNzIiBzaW1wbGUgc3R5bGU9Im1hcmdpbi10b3A6IDEwcHgiPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLpgInmi6nlm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6L6T5YWl5Y+C5pWwIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IuWkhOeQhuWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICA8L2VsLXN0ZXBzPgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImZsaXBfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0iZmxpcFNlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJmbGlwX2FjdGl2ZSA9PT0gMSIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXYgc3R5bGU9Im1hcmdpbi1sZWZ0OiAyMCU7IG1hcmdpbi1yaWdodDogMjAlIj4KICAgICAgICAgICAgICAgIDxlbC1mb3JtIDptb2RlbD0iZmxpcEZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9ImZsaXBGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLnv7vovazmlrnlkJEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtd2lkdGg9IjMwJSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEzMCU7IHdpZHRoOiA2MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1zZWxlY3Qgdi1tb2RlbD0iZmxpcEZvcm0uZmxpX2Nob2kiIHBsYWNlaG9sZGVyPSLor7fpgInmi6nnv7vovazmlrnlkJEiPgogICAgICAgICAgICAgICAgICAgICAgPGVsLW9wdGlvbiBsYWJlbD0i5rC05bmz57+76L2sIiB2YWx1ZT0iaG9yaXpvbnRhbCI+PC9lbC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICA8ZWwtb3B0aW9uIGxhYmVsPSLlnoLnm7Tnv7vovawiIHZhbHVlPSJ2ZXJ0aWNhbCI+PC9lbC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgICA8ZWwtb3B0aW9uIGxhYmVsPSLlr7nop5Lnv7vovawiIHZhbHVlPSJkaWFnb25hbCI+PC9lbC1vcHRpb24+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1zZWxlY3Q+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgogICAgICAgICAgICAgICAgPC9lbC1mb3JtPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJmbGlwX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9ImZsaXBfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9ImZsaXBfYWN0aXZlIDw9IDIiIDpsb2FkaW5nPSJmbGlwTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImZsaXBfbmV4dCI+5LiL5LiA5q2lCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0iZmxpcF9hY3RpdmUgPj0gMyIgOmxvYWRpbmc9ImZsaXBMb2FkIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIj7lrozmiJAKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLlm77lg4/lubPnp7siPgogICAgICAgICAgICA8ZWwtc3RlcHMgOmFjdGl2ZT0ibW92ZV9hY3RpdmUiIGZpbmlzaC1zdGF0dXM9InN1Y2Nlc3MiIHNpbXBsZSBzdHlsZT0ibWFyZ2luLXRvcDogMTBweCI+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IumAieaLqeWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLovpPlhaXlj4LmlbAiPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i5aSE55CG5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgIDwvZWwtc3RlcHM+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ibW92ZV9hY3RpdmUgPT09IDAiIHN0eWxlPSJtYXJnaW4tdG9wOiAyMHB4OyI+CiAgICAgICAgICAgICAgPFBpY3R1cmVDaG9vc2VPbmUgcmVmPSJtb3ZlU2VsZWN0aW9uIi8+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9Im1vdmVfYWN0aXZlID09PSAxIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDIwJTsgbWFyZ2luLXJpZ2h0OiAyMCUiPgogICAgICAgICAgICAgICAgPGVsLWZvcm0gOm1vZGVsPSJtb3ZlRm9ybSIgY2xhc3M9ImRlbW8tZm9ybS1pbmxpbmUiPgogICAgICAgICAgICAgICAgICA8ZWwtZm9ybS1pdGVtIGxhYmVsPSLovpPlh7rlm77lg4/lkI3np7AiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWwtd2lkdGg9IjMwJSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6cnVsZXM9IlsKICAgICAgICAgICAgICAgICAgICB7IHJlcXVpcmVkOiB0cnVlLCBtZXNzYWdlOiAn5ZCN56ew5LiN6IO95Li656m6J30KICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDogNjAlIj4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0ibW92ZUZvcm0ucmVzX25hbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImFwcGVuZCI+LmpwZzwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CgoKICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5Z2Q5qCH6L2056e75Yqo5YOP57Sg5YC8IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflg4/ntKDlgLzkuI3og73kuLrnqbonfSwKICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdudW1iZXInLCBtZXNzYWdlOiAn5YOP57Sg5YC85b+F6aG75Li65pWw5a2X5YC8J30KICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDo4MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjciPgogICAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHBsYWNlaG9sZGVyPSJ46L2056e75Yqo5YOP57Sg5YC8IiB2LW1vZGVsPSJtb3ZlRm9ybS5tb3ZlX3giPgogICAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgICA8L2VsLWNvbD4KICAgICAgICAgICAgICAgICAgICA8ZWwtY29sIGNsYXNzPSJsaW5lIiA6c3Bhbj0iMiI+LDwvZWwtY29sPgogICAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjciPgogICAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHBsYWNlaG9sZGVyPSJ56L2056e75Yqo5YOP57Sg5YC8IiB2LW1vZGVsPSJtb3ZlRm9ybS5tb3ZlX3kiPgogICAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgICA8L2VsLWNvbD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CgoKICAgICAgICAgICAgICAgIDwvZWwtZm9ybT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0ibW92ZV9hY3RpdmUgPT09IDIiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPuWOn+WbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9hc3NldHMvJyArIHRoaXMuZGlzcGxheUltZ1swXS5maWxlTmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJtb3ZlX2FjdGl2ZSA9PT0gMyIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+57uT5p6c5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL3Jlc3VsdHMvJyArIHRoaXMucHJvY2Vzc1Jlc3VsdC5yZXN1bHRfbmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxlbC1idXR0b24gc3R5bGU9Im1hcmdpbi1sZWZ0OiA4MCU7IG1hcmdpbi10b3A6IDEwcHg7IiBAY2xpY2s9ImNhbmNlbCI+5Y+W5raIPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJtb3ZlX2FjdGl2ZSA8PSAyIiA6bG9hZGluZz0ibW92ZUxvYWQiIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJtb3ZlX25leHQiPuS4i+S4gOatpQogICAgICAgICAgICA8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9Im1vdmVfYWN0aXZlID49IDMiIDpsb2FkaW5nPSJtb3ZlTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCI+5a6M5oiQCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICAgIDxlbC10YWItcGFuZSBsYWJlbD0i5Zu+5YOP5peL6L2sIj4KICAgICAgICAgICAgPGVsLXN0ZXBzIDphY3RpdmU9InJvdGF0ZV9hY3RpdmUiIGZpbmlzaC1zdGF0dXM9InN1Y2Nlc3MiIHNpbXBsZSBzdHlsZT0ibWFyZ2luLXRvcDogMTBweCI+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9IumAieaLqeWbvueJhyI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLovpPlhaXlj4LmlbAiPjwvZWwtc3RlcD4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i5aSE55CG5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgIDwvZWwtc3RlcHM+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0icm90YXRlX2FjdGl2ZSA9PT0gMCIgc3R5bGU9Im1hcmdpbi10b3A6IDIwcHg7Ij4KICAgICAgICAgICAgICA8UGljdHVyZUNob29zZU9uZSByZWY9InJvdGF0ZVNlbGVjdGlvbiIvPgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJyb3RhdGVfYWN0aXZlID09PSAxIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDIwJTsgbWFyZ2luLXJpZ2h0OiAyMCUiPgogICAgICAgICAgICAgICAgPGVsLWZvcm0gOm1vZGVsPSJyb3RhdGVGb3JtIiBjbGFzcz0iZGVtby1mb3JtLWlubGluZSI+CiAgICAgICAgICAgICAgICAgIDxlbC1mb3JtLWl0ZW0gbGFiZWw9Iui+k+WHuuWbvuWDj+WQjeensCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYWJlbC13aWR0aD0iMzAlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflkI3np7DkuI3og73kuLrnqbonfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImFsaWduLWNvbnRlbnQ6IGNlbnRlcjsgbWFyZ2luLWxlZnQ6IDEwJTsgbWFyZ2luLXJpZ2h0OiAxMCU7IHdpZHRoOiA2MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1pbnB1dCB2LW1vZGVsPSJyb3RhdGVGb3JtLnJlc19uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSBzbG90PSJhcHBlbmQiPi5qcGc8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgoKICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5Zu+54mH5peL6L2s6KeS5bqmIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSIgWwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6J+inkuW6puWAvOS4jeiDveS4uuepuid9LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgdHlwZTogJ251bWJlcicsIG1lc3NhZ2U6ICfop5LluqblgLzlv4XpobvkuLrmlbDlrZflgLwnfQogICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDogNjAlIj4KICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgdi1tb2RlbD0icm90YXRlRm9ybS5hbmdsZSI+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CgoKICAgICAgICAgICAgICAgIDwvZWwtZm9ybT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2IHYtc2hvdz0icm90YXRlX2FjdGl2ZSA9PT0gMiIKICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyBtYXJnaW4tdG9wOiAyMHB4OyBtaW4taGVpZ2h0OiAzNzVweDsgbWF4LWhlaWdodDogMzc1cHgiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZGVtb25zdHJhdGlvbiI+5Y6f5Zu+54mHPC9zcGFuPgogICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgPGltZyA6c3JjPSJyZXF1aXJlKCcuLi8uLi8uLi8uLi9hcHBzL2Fzc2V0cy8nICsgdGhpcy5kaXNwbGF5SW1nWzBdLmZpbGVOYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9InJvdGF0ZV9hY3RpdmUgPT09IDMiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPue7k+aenOWbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9yZXN1bHRzLycgKyB0aGlzLnByb2Nlc3NSZXN1bHQucmVzdWx0X25hbWUpIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiBhdXRvOyBoZWlnaHQ6IGF1dG87IG1heC13aWR0aDogNDAwcHg7IG1heC1oZWlnaHQ6IDMwMHB4OyBtYXJnaW4tdG9wOiAzMHB4Ij4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZWwtYnV0dG9uIHN0eWxlPSJtYXJnaW4tbGVmdDogODAlOyBtYXJnaW4tdG9wOiAxMHB4OyIgQGNsaWNrPSJjYW5jZWwiPuWPlua2iDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0icm90YXRlX2FjdGl2ZSA8PSAyIiA6bG9hZGluZz0icm90YXRlTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9InJvdGF0ZV9uZXh0Ij7kuIvkuIDmraUKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICAgIDxlbC1idXR0b24gdi1zaG93PSJyb3RhdGVfYWN0aXZlID49IDMiIDpsb2FkaW5nPSJyb3RhdGVMb2FkIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7IG1hcmdpbi10b3A6IDEwcHg7IgogICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iY2FuY2VsIj7lrozmiJAKICAgICAgICAgICAgPC9lbC1idXR0b24+CiAgICAgICAgICA8L2VsLXRhYi1wYW5lPgogICAgICAgICAgPGVsLXRhYi1wYW5lIGxhYmVsPSLlm77lg4/mlL7nvKkiPgogICAgICAgICAgICA8ZWwtc3RlcHMgOmFjdGl2ZT0icmVzaXplX2FjdGl2ZSIgZmluaXNoLXN0YXR1cz0ic3VjY2VzcyIgc2ltcGxlIHN0eWxlPSJtYXJnaW4tdG9wOiAxMHB4Ij4KICAgICAgICAgICAgICA8ZWwtc3RlcCB0aXRsZT0i6YCJ5oup5Zu+54mHIj48L2VsLXN0ZXA+CiAgICAgICAgICAgICAgPGVsLXN0ZXAgdGl0bGU9Iui+k+WFpeWPguaVsCI+PC9lbC1zdGVwPgogICAgICAgICAgICAgIDxlbC1zdGVwIHRpdGxlPSLlpITnkIblm77niYciPjwvZWwtc3RlcD4KICAgICAgICAgICAgPC9lbC1zdGVwcz4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJyZXNpemVfYWN0aXZlID09PSAwIiBzdHlsZT0ibWFyZ2luLXRvcDogMjBweDsiPgogICAgICAgICAgICAgIDxQaWN0dXJlQ2hvb3NlT25lIHJlZj0icmVzaXplU2VsZWN0aW9uIi8+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9InJlc2l6ZV9hY3RpdmUgPT09IDEiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJtYXJnaW4tbGVmdDogMjAlOyBtYXJnaW4tcmlnaHQ6IDIwJSI+CiAgICAgICAgICAgICAgICA8ZWwtZm9ybSA6bW9kZWw9InJlc2l6ZUZvcm0iIGNsYXNzPSJkZW1vLWZvcm0taW5saW5lIj4KICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i6L6T5Ye65Zu+5YOP5ZCN56ewIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsLXdpZHRoPSIzMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnJ1bGVzPSJbCiAgICAgICAgICAgICAgICAgICAgeyByZXF1aXJlZDogdHJ1ZSwgbWVzc2FnZTogJ+WQjeensOS4jeiDveS4uuepuid9CiAgICAgICAgICAgICAgICAgICAgXSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iYWxpZ24tY29udGVudDogY2VudGVyOyBtYXJnaW4tbGVmdDogMTAlOyBtYXJnaW4tcmlnaHQ6IDEwJTsgd2lkdGg6IDYwJSI+CiAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHYtbW9kZWw9InJlc2l6ZUZvcm0ucmVzX25hbWUiPgogICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHNsb3Q9ImFwcGVuZCI+LmpwZzwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1pbnB1dD4KICAgICAgICAgICAgICAgICAgPC9lbC1mb3JtLWl0ZW0+CgoKICAgICAgICAgICAgICAgICAgPGVsLWZvcm0taXRlbSBsYWJlbD0i5Z2Q5qCH6L205pS+57yp5YCN5pWwIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpydWxlcz0iWwogICAgICAgICAgICAgICAgICAgIHsgcmVxdWlyZWQ6IHRydWUsIG1lc3NhZ2U6ICflgI3mlbDkuI3og73kuLrnqbonfSwKICAgICAgICAgICAgICAgICAgICB7IHR5cGU6ICdudW1iZXInLCBtZXNzYWdlOiAn5YCN5pWw5b+F6aG75Li65pWw5a2X5YC8J30KICAgICAgICAgICAgICAgICAgICBdIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1jb250ZW50OiBjZW50ZXI7IG1hcmdpbi1sZWZ0OiAxMCU7IG1hcmdpbi1yaWdodDogMTAlOyB3aWR0aDo4MCUiPgogICAgICAgICAgICAgICAgICAgIDxlbC1jb2wgOnNwYW49IjciPgogICAgICAgICAgICAgICAgICAgICAgPGVsLWlucHV0IHBsYWNlaG9sZGVyPSJ46L205pS+57yp5YCN5pWwIiB2LW1vZGVsPSJyZXNpemVGb3JtLnNpemVfeCI+CiAgICAgICAgICAgICAgICAgICAgICA8L2VsLWlucHV0PgogICAgICAgICAgICAgICAgICAgIDwvZWwtY29sPgogICAgICAgICAgICAgICAgICAgIDxlbC1jb2wgY2xhc3M9ImxpbmUiIDpzcGFuPSIyIj4sPC9lbC1jb2w+CiAgICAgICAgICAgICAgICAgICAgPGVsLWNvbCA6c3Bhbj0iNyI+CiAgICAgICAgICAgICAgICAgICAgICA8ZWwtaW5wdXQgcGxhY2Vob2xkZXI9InnovbTmlL7nvKnlgI3mlbAiIHYtbW9kZWw9InJlc2l6ZUZvcm0uc2l6ZV95Ij4KICAgICAgICAgICAgICAgICAgICAgIDwvZWwtaW5wdXQ+CiAgICAgICAgICAgICAgICAgICAgPC9lbC1jb2w+CiAgICAgICAgICAgICAgICAgIDwvZWwtZm9ybS1pdGVtPgoKCiAgICAgICAgICAgICAgICA8L2VsLWZvcm0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGRpdiB2LXNob3c9InJlc2l6ZV9hY3RpdmUgPT09IDIiCiAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsgbWFyZ2luLXRvcDogMjBweDsgbWluLWhlaWdodDogMzc1cHg7IG1heC1oZWlnaHQ6IDM3NXB4Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRlbW9uc3RyYXRpb24iPuWOn+WbvueJhzwvc3Bhbj4KICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgIDxpbWcgOnNyYz0icmVxdWlyZSgnLi4vLi4vLi4vLi4vYXBwcy9hc3NldHMvJyArIHRoaXMuZGlzcGxheUltZ1swXS5maWxlTmFtZSkiIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IGF1dG87IGhlaWdodDogYXV0bzsgbWF4LXdpZHRoOiA0MDBweDsgbWF4LWhlaWdodDogMzAwcHg7IG1hcmdpbi10b3A6IDMwcHgiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgIDxkaXYgdi1zaG93PSJyZXNpemVfYWN0aXZlID09PSAzIgogICAgICAgICAgICAgICAgIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXI7IG1hcmdpbi10b3A6IDIwcHg7IG1pbi1oZWlnaHQ6IDM3NXB4OyBtYXgtaGVpZ2h0OiAzNzVweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkZW1vbnN0cmF0aW9uIj7nu5Pmnpzlm77niYc8L3NwYW4+CiAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICA8aW1nIDpzcmM9InJlcXVpcmUoJy4uLy4uLy4uLy4uL2FwcHMvcmVzdWx0cy8nICsgdGhpcy5wcm9jZXNzUmVzdWx0LnJlc3VsdF9uYW1lKSIgYWx0PSIiCiAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogYXV0bzsgaGVpZ2h0OiBhdXRvOyBtYXgtd2lkdGg6IDQwMHB4OyBtYXgtaGVpZ2h0OiAzMDBweDsgbWFyZ2luLXRvcDogMzBweCI+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgPGVsLWJ1dHRvbiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDgwJTsgbWFyZ2luLXRvcDogMTBweDsiIEBjbGljaz0iY2FuY2VsIj7lj5bmtog8L2VsLWJ1dHRvbj4KICAgICAgICAgICAgPGVsLWJ1dHRvbiB2LXNob3c9InJlc2l6ZV9hY3RpdmUgPD0gMiIgOmxvYWRpbmc9InJlc2l6ZUxvYWQiIHN0eWxlPSJtYXJnaW4tbGVmdDogMTBweDsgbWFyZ2luLXRvcDogMTBweDsiCiAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJyZXNpemVfbmV4dCI+5LiL5LiA5q2lCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgICA8ZWwtYnV0dG9uIHYtc2hvdz0icmVzaXplX2FjdGl2ZSA+PSAzIiA6bG9hZGluZz0icmVzaXplTG9hZCIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4OyBtYXJnaW4tdG9wOiAxMHB4OyIKICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImNhbmNlbCI+5a6M5oiQCiAgICAgICAgICAgIDwvZWwtYnV0dG9uPgogICAgICAgICAgPC9lbC10YWItcGFuZT4KICAgICAgICA8L2VsLXRhYnM+CiAgICAgIDwvZWwtbWFpbj4KCiAgICAgIDxlbC1mb290ZXIgaGVpZ2h0PSIxMHB4Ij4KICAgICAgICA8Q29weXJpZ2h0Lz4KICAgICAgPC9lbC1mb290ZXI+CiAgICA8L2VsLWNvbnRhaW5lcj4KICA8L2VsLWNvbnRhaW5lcj4KPC9kaXY+Cg=="},null]}