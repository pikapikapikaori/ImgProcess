{"remainingRequest":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/src/components/pages/Repair.vue?vue&type=template&id=0078dc68&scoped=true&","dependencies":[{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/src/components/pages/Repair.vue","mtime":1653751833521},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/cache-loader/dist/cjs.js","mtime":1653547444000},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1653547444710},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/cache-loader/dist/cjs.js","mtime":1653547444000},{"path":"/Users/pikapikapi/Library/Mobile Documents/com~apple~CloudDocs/Documents/python/ImgProcess/static/node_modules/vue-loader/lib/index.js","mtime":1653547444500}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}